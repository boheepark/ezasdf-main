language: node_js
node_js: '7'

before_install:
  - stty cols 80

dist: trusty
sudo: required

addons:
  firefox: latest
  apt:
    sources:
      - google-chrome
    packages:
      - google-chrome-stable fluxbox

services:
  - docker

env:
  global:
    - DOCKER_COMPOSE_VERSION=1.11.2
    - COMMIT=${TRAVIS_COMMIT::8}
    - USERS=ezasdf-users
    - USERS_REPO=https://github.com/boheepark/$USERS.git
    - USERS_DB=ezasdf-users_db
    - USERS_DB_REPO=https://github.com/boheepark/$USERS.git#master:project/db
    - CLIENT=ezasdf-client
    - CLIENT_REPO=https://github.com/boheepark/$CLIENT.git
    - SWAGGER=ezasdf-swagger
    - SWAGGER_REPO=https://github.com/boheepark/$SWAGGER.git
    - NGINX=ezasdf-nginx
    - NGINX_REPO=https://github.com/boheepark/ezasdf-main.git#master:nginx

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

before_script:
  - export TEST_URL=http://127.0.0.1
  - export REACT_APP_USERS_SERVICE_URL=http://127.0.0.1
  - export SECRET_KEY=secret
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  - sleep 3
  - fluxbox >/dev/null 2>&1 &
  - docker-compose -f docker-compose-ci.yml up -d --build

script:
  - docker-compose -f docker-compose-ci.yml run users-service python manage.py cov
  - docker-compose -f docker-compose-ci.yml run users-service python manage.py recreate_db
  - testcafe chrome e2e
  - testcafe firefox e2e

after_script:
  - docker-compose -f docker-compose-ci.yml down

after_success:
  - docker login -u $DOCKER_ID -p $DOCKER_PASSWORD
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH; fi`
  # users
  - docker build $USERS_REPO -t $USERS:$COMMIT
  - docker tag $USERS:$COMMIT $DOCKER_ID/$USERS:$TAG
  - docker push $DOCKER_ID/$USERS
  # users db
  - docker build $USERS_DB_REPO -t $USERS_DB:$COMMIT
  - docker tag $USERS_DB:$COMMIT $DOCKER_ID/$USERS_DB:$TAG
  - docker push $DOCKER_ID/$USERS_DB
  # client
  - docker build $CLIENT_REPO -t $CLIENT:$COMMIT
  - docker tag $CLIENT:$COMMIT $DOCKER_ID/$CLIENT:$TAG
  - docker push $DOCKER_ID/$CLIENT
  # swagger
  - docker build $SWAGGER_REPO -t $SWAGGER:$COMMIT
  - docker tag $SWAGGER:$COMMIT $DOCKER_ID/$SWAGGER:$TAG
  - docker push $DOCKER_ID/$SWAGGER
  # nginx
  - docker build $NGINX_REPO -t $NGINX:$COMMIT
  - docker tag $NGINX:$COMMIT $DOCKER_ID/$NGINX:$TAG
  - docker push $DOCKER_ID/$NGINX